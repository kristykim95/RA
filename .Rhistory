summary("complete_data.csv")
names("complete_data")
names("complete_data.csv")
install.packages("pastecs")
library(pastecs)
colnames(DF) = DF[1, ]
colnames(DF) <- as.character(unlist(DF[1,])
DF = DF[-1, ]
colnames(DF) <- as.character(unlist(DF[1,])
e
names("complete_data")
head("complete_data")
compelte_data[1:10,]
complete.data[1:10,]
mydata
complete_data
complete.data[1:10,]
mydata[1:10,]
complete.data.csv[1:10,]
"complete_data.csv"[1:10,]
"complete_data"[1:10,]
"complete_data"[1:3,]
"complete_data"[5:1,]
"complete_data"[1:10,1:3]
edit(complete_data)
edit("complete_data")
rm(list=ls())
rm(list=ls())
read.table("complete_data.csv", header=TRUE)
read.table("complete_data.csv", header=TRUE)
data <- read.table("complete_data.csv",header = TRUE)
data <- read.csv("complete_data.csv",header = TRUE)
rm(list=ls()) - Read more at: http://scl.io/AVkLvbhX#gs.frxGaEw
rm(list=ls())
ata <- read.csv("complete_data.csv",header = TRUE)
rm(list=ls())
data <- read.csv("complete_data.csv",header = TRUE)
data$RT
data$Chosen <- ifelse(data$Choice_1left_4right = 4, data$Image_right, ifelse(data$Choice_1left_4right = 1, data$Image_left)) data.frame(Trialnumber,Image_right,Image_left, RT, Choice_1left_4right, SubjectID, Group, Chosen)
data$Chosen <- ifelse(data$Choice_1left_4right == 4, data$Image_right, ifelse(data$Choice_1left_4right == 1, data$Image_left)) data.frame(Trialnumber,Image_right,Image_left, RT, Choice_1left_4right, SubjectID, Group, Chosen)
data$Chosen <- ifelse(data$Choice_1left_4right == 4, data$Image_right, ifelse(data$Choice_1left_4right == 1, data$Image_left))
getwd
getwd()
read.csv(compelte_data.csv)
read.csv("complete_data.csv")
dir()
ls()
dataframe1 <- matrix(0,3,1140)
dataframe1
dataframe1 <- matrix(0,1140, 3)
dataframe1
col3 <- rep(c(3:20, 1, 2), times=57)
col3
col1 <- rep(c(1:20), each=57)
col2 <- rep(c(2:20,1), times=57)
col3 <- rep(c(3:20, 1, 2), times=57)
col4 <- 0
col5 <- 0
col6 <- 0
dataframe1 <- cbind(col1, col2, col3, col4, col5, col6)
dataframe1
col1 <- rep(c(1:20), each=60)
col2 <- rep(c(2:20,1), times=60)
col3 <- rep(c(3:20, 1, 2), times=60)
col4 <- 0
col5 <- 0
col6 <- 0
dataframe1 <- cbind(col1, col2, col3, col4, col5, col6)
dataframe1
d <- d[!(d$col1=="col2"")]
datafram1
d <- d[!(d$col1=="col2",)]
d <- d[!(d$col1=="col2",)]
esc
return
dataframe1
d <- d[!(d$col1=="col2",)]
d <- d[!(d$col1=="col2")]
subset(dataframe, col1==col2)
subset(dataframe1, col1==col2)
subset(dataframe1, col1=/=col2)
subset(dataframe1, col1!=col2 & col2!=col3 & col1!=col3)
duplicated(dataframe1)
col1 <- rep(c(1:20), each=60)
col2 <- rep(c(2:20,1), times=60)
col3 <- rep(c(3:20, 1, 2), times=60)
col4 <- 0
col5 <- 0
col6 <- 0
col7 <- 0
dataframe1 <- cbind(col1, col2, col3, col4, col5, col6, col7)
subset(dataframe1, col1!=col2 & col2!=col3 & col1!=col3)
dataframe1$col4 <- paste(dataframe1$col1, dataframe1$col2, dataframe1$col3)
dataframe1$col4 <- paste(dataframe1$col1, dataframe1$col2, dataframe1$col3, sep=" ")
dataframe1[col4] <- paste(dataframe1[col1], dataframe1[col2] dataframe1[col3] sep=" ")
help("paste")
dataframe1[col4] <- paste(col1, col2 col3 sep=" ")
dataframe1$col4 <- paste(col1, col2 col3 sep=" ")
dataframe1$col4 <- paste("col1" "col2" "col3" sep=" ")
dataframe1$col4 <- paste(col1 col2 col3 sep=" ")
dataframe1[col4] <- paste(col1 col2 col3 sep=" ")
dataframe1[1,3]
dataframe1[1:10,1:4]
col1 <- rep(c(1:20), each=57)
col2 <- rep(c(2:20,1), each=57)
col3 <- rep(c(3:20, 1, 2), times=57)
col4 <- 0
col5 <- 0
col6 <- 0
col7 <- 0
dataframe1 <- cbind(col1, col2, col3, col4, col5, col6, col7)
dataframe1
col1 <- rep(c(1:20), each=57)
col2 <- rep(c(2:20,1), times=57)
col3 <- rep(c(3:20, 1, 2), times=57)
col4 <- 0
col5 <- 0
col6 <- 0
col7 <- 0
dataframe1 <- cbind(col1, col2, col3, col4, col5, col6, col7)
dataframe1
col1 <- rep(c(1:20), each=57)
col2 <- rep(c(2:20,1), times=57)
col3 <- rep(c(3:20, 1, 2), times=57)
col4 <- 0
col5 <- 0
col6 <- 0
col7 <- 0
dataframe1 <- cbind(col1, col2, col3, col4, col5, col6, col7)
subset(dataframe1, col1!=col2 & col2!=col3 & col1!=col3)
dataframe1
col1 <- rep(c(1:20), each=60)
col2 <- rep(c(2:20,1), times=60)
col3 <- rep(c(3:20, 1, 2), times=60)
col4 <- 0
col5 <- 0
col6 <- 0
col7 <- 0
dataframe1 <- cbind(col1, col2, col3, col4, col5, col6, col7)
subset(dataframe1, col1!=col2 & col2!=col3 & col1!=col3)
paste(dataframe1[col1], dataframe1[col2] dataframe1[col3] sep=" ")
dataframe1[col4] <- paste[dataframe1[col1], dataframe1[col2] dataframe1[col3] sep=" "]
dataframe1[col1]
col1 <- rep(c(1:20), each=60)
col2 <- rep(c(2:20,1), times=60)
col3 <- rep(c(3:20, 1, 2), times=60)
dataframe1 <- cbind(col1, col2, col3)
subset(dataframe1, col1!=col2 & col2!=col3 & col1!=col3)
dataframe1[col4] <- paste[dataframe1[col1], dataframe1[col2] dataframe1[col3] sep=" "]
dataframe1[col4] <- paste[dataframe1[col1], dataframe1[col2] dataframe1[col3]]
dataframe1[col4] <- paste(dataframe1[col1], dataframe1[col2] dataframe1[col3] sep=" ")
DF = data.frame(col1=rep(1:20, each=60), col2=rep(2:20,2, times=60), col3=rep(3:20,1,2,times=60))
DF
subset(DF, col1!=col2 & col2!=col3 & col1!=col3)
DF
DF = data.frame(col1=rep(c(1:20, each=60), col2=rep(c(2:20,2), times=60), col3=rep(c(3:20,1,2),times=60))
DF
DF
two <- 2:20,2
two <- 2:20 2
two <- c(2:20,2)
two
two <- c(2:20,1)
three <- c(3:20,1,2)
DF = data.frame(col1=rep(1:20, each=60), col2=rep("two", times=60), col3=rep("three",times=60))
DF
DF = data.frame(col1=rep(1:20, each=60), col2=rep(two, times=60), col3=rep(three, times=60))
DF
subset(DF, col1!=col2 & col2!=col3 & col1!=col3)
DF
col1 <- rep(c(1:20), each=60)
col2 <- rep(c(1:20), each=60)
col3 <- rep(c(1:20), each=60)
dataframe1 <- cbind(col1, col2, col3)
subset(dataframe1, col1!=col2 & col2!=col3 & col1!=col3)
dataframe1
col1 <- rep(c(1:20), each=60)
col2 <- rep(c(2:20,1), each=60)
col3 <- rep(c(3:20,1,2), each=60)
dataframe1 <- cbind(col1, col2, col3)
subset(dataframe1, col1!=col2 & col2!=col3 & col1!=col3)
col1 <- rep(c(1:20), each=60)
col2 <- rep(c(1:20), times=60)
col3 <- rep(c(2:20,1), times=60)
dataframe1 <- cbind(col1, col2, col3)
subset(dataframe1, col1!=col2 & col2!=col3 & col1!=col3)
col1 <- rep(c(1:20), each=60)
col2 <- rep(c(1:20), times=60)
col3 <- rep(c(2:20,1), times=60)
dataframe1 <- cbind(col1, col2, col3)
dataframe1
subset(dataframe1, col1!=col2 & col2!=col3 & col1!=col3)
datafram1$col1
dataframe1$col1
help(atomic)
dataframe1[col1]
dataframe1["col1"]
dataframe1[col2]
col2
dataframe1
dataframe1[1:10,1:10]
dataframe1[1:3,1:3]
DF = data.frame(col1=rep(1:20, each=60), col2=rep(c(1:20), times=60), col3=rep(c(2:20,1), times=60))
subset(DF, col1!=col2 & col2!=col3 & col1!=col3)
DF$col4 <- paste(DF$col1, DF$col2, DF$col3, sep=" "]
DF$col4 <- paste(DF$col1, DF$col2, DF$col3, sep=" ")
DF
DF = data.frame(col1=rep(1:20, each=60), col2=rep(c(1:20), times=60), col3=rep(c(2:20,1), times=60))
subset(DF, col1!=col2 & col2!=col3 & col1!=col3)
DF2 <- subset(DF, col1!=col2 & col2!=col3 & col1!=col3)
DF2$col4 <- paste(DF2$col1, DF2$col2, DF2$col3, sep=" ")
DF2
dat,sort=t(apply(dat,1,sort))
dat.sort=t(apply(dat,1,sort))
DF.sort=t(apply(DF,1,sort))
DF[!duplicated(DF.sort),]
DF2.sort=t(apply(D2F,1,sort))
DF2[!duplicated(DF2.sort),]
DF2.sort=t(apply(DF2,1,sort))
DF2[!duplicated(DF2.sort),]
DF = data.frame(col1=rep(1:20, each=60), col2=rep(c(1:20), times=60), col3=rep(c(2:20,1), times=60))
DF2 <- subset(DF, col1!=col2 & col2!=col3 & col1!=col3)
DF2.sort=t(apply(DF2,1,sort))
DF2[!duplicated(DF2.sort),]
DF = data.frame(col1=rep(1:20, each=60), col2=rep(c(1:20), times=60), col3=rep(c(20:1), times=60))
DF2 <- subset(DF, col1!=col2 & col2!=col3 & col1!=col3)
DF2$col4 <- paste(DF2$col1, DF2$col2, DF2$col3, sep=" ")
DF2.sort=t(apply(DF2.1,sort))
DF2[!duplicated(DF2.sort),]
DF = data.frame(col1=rep(1:20, each=60), col2=rep(c(1:20), times=60), col3=rep(c(2:20,1), times=60))
DF2 <- subset(DF, col1!=col2 & col2!=col3 & col1!=col3)
DF2.sort=t(apply(DF2.1,sort))
DF2[!duplicated(DF2.sort),]
DF = data.frame(col1=rep(1:20, each=60), col2=rep(c(1:20), times=60), col3=rep(c(2:20,1), times=60))
DF.sort=t(apply(DF.1,sort))
DF[!duplicated(DF.sort),]
DF2 <- subset(DF, col1!=col2 & col2!=col3 & col1!=col3)
DF2
DF = data.frame(col1=rep(1:20, each=60), col2=rep(c(1:20), times=60), col3=rep(c(2:20,1), times=60))
DF.sort=t(apply(DF.1,sort))
DF2 <- DF[!duplicated(DF.sort),]
DF2
DF3 <- subset(DF2, col1!=col2 & col2!=col3 & col1!=col3)
DF3
DF2
DF = data.frame(col1=rep(1:20, each=8000), col2=rep(rep(c(1:20), each=400),times=20), col3=rep(rep(c(1:20), each=20),times=400))
DF.sort=t(apply(DF.1,sort))
DF2 <- DF[!duplicated(DF.sort),]
DF3 <- subset(DF2, col1!=col2 & col2!=col3 & col1!=col3)
DF3
DF3[!duplicated(DF3), ]
DF <- expand.grid(c(1:20), c(1:20), c(1:20))
DF
max.print(DF)
DF2 <- subset(DF, col1!=col2 & col2!=col3 & col1!=col3)
DF2
DF <- expand.grid(col1=c(1:20), col2=c(1:20), col3=c(1:20))
DF2 <- subset(DF, col1!=col2 & col2!=col3 & col1!=col3)
DF2
N   <- 3
vec <- c(1:20)
lst <- lapply(numeric(N), function(x) vec)
as.matrix(expand.grid(lst))
new <- subset(lst, col1!=col2 & col2!=col3 & col1!=col3)
new
N   <- 3
vec <- c(1:20)
lst <- lapply(numeric(N), function(x) vec)
as.matrix(expand.grid(lst))
lst[1:3,1:3]
DF <- expand.grid(col1=c(1:20), col2=c(1:20), col3=c(1:20))
DF <- expand.grid(col1=c(1:20), col2=c(1:20), col3=c(1:20))
DF2 <- subset(DF, col1!=col2 & col2!=col3 & col1!=col3)
df2
DF2
DF
DF <- expand.grid(c(1:20), c(1:20), c(1:20))
subset(DF, col1!=col2 & col2!=col3 & col1!=col3)
rm(list=ls())
ex <- combn(1:20, 3, FUN=NULL, simplify = TRUE)
ex
ex <- combn(1:20, 3, FUN=NULL, simplify = FALSE)
EX
EX
ex
DF <- cbind(ex)
DF
ex <- combn(1:20, 3, FUN=NULL, simplify = TRUE)
DF <- cbind(ex)
DF
t(DF)
ls()
list(ls())
rm(list=ls())
combinations <- combn(1:20, 3, FUN=NULL, simplify = TRUE)
DF <- cbind(combinations)
DF <- t(DF)
DF
original <- read.csv("data.csv")
original
max.print(original)
print(original)
original[1:4,1:4]
original <- read.csv("data.csv")
original2 <- cbind(original, apply(original$Image_right if(original$Choice_1left_4right == 4 {ifelse(any(original$Choice_1left_4right==1),original$Image_left,length(unique(x))}),1, FUN=FALSE))
apply(original$Image_right,1, FUN=FALSE {ifelse(any(original$Choice_1left_4right==1),original$Image_left,length(unique(x))}),1, FUN=FALSE))
original2 <- cbind(original, apply(original$Image_right,1, FUN=FALSE (ifelse(any(original$Choice_1left_4right==1),original$Image_left,length(unique(x))),1, FUN=FALSE))
esc
original2 <- cbind(original, apply(original$Image_right,1, FUN=FALSE (ifelse(any(original$Choice_1left_4right==1),original$Image_left,length(unique(x))))))
original2 <- cbind(original, apply(original$Image_right,1, function(x) (ifelse(any(original$Choice_1left_4right==1),original$Image_left,length(unique(x))))))
echo "# practiceassignment" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/kristykim95/practiceassignment.git
git push -u origin master
combinations <- combn(1:20, 3, FUN=NULL, simplify = TRUE)
DF <- cbind(combinations)
DF <- t(DF)
DF
original <- read.csv("data.csv")
original2 <- cbind(original, apply(original$Image_right,1, function(x) (ifelse(any(original$Choice_1left_4right==1),original$Image_left,length(unique(x))))))
apply(original$Image_right,1, function(x) (ifelse(any(original$Choice_1left_4right==1),original$Image_left,length(unique(x))))))
apply(original$Image_right,1, function(x) (ifelse(any(original$Choice_1left_4right==1),original$Image_left,length(unique(x)))))
original, apply(original$Image_right,1, function(x) (ifelse(any(original$Choice_1left_4right==1),original$Image_left,length(unique(x)))))
echo "# practiceassignment" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/kristykim95/practiceassignment.git
git push -u origin master
git init
original$choice <- apply(original,1,)
original$choice <- apply(original,1,FUN=NULL)
original$choice <- apply(original,1,)
original dataset $ new column<-ifelse(your column==1
original$choice<-ifelse(your column==1)
original$choice<-ifelse(original$Choice_1left_4right==1, replace with original$Image_right)
