{
    "collab_server" : "",
    "contents" : "## Add column on original data that transforms the 1 and 4 to actual choices between left and right screen; having trouble with this code; find new one [original$choice <- apply(original,1,)]\noriginal <- read.csv(\"data.csv\")\noriginal2 <- cbind(original, apply(original$Image_right,1, function(x) (ifelse(any(original$Choice_1left_4right==1),original$Image_left,length(unique(x)))))   \n\n## Create new data frame (DF) with all three combinations\ncombinations <- combn(1:20, 3, FUN=NULL, simplify = TRUE)\nDF <- cbind(combinations)\nDF <- t(DF)\n\n## Find if function to =1 for Column 4 if Column 1 > Column 2, =1 for Column 5 if Column 2 > 3, and =1 if Column 1 > Column 3; FOR EACH SUBJECT\n\n## Create a new data frame (DF2 and DF3) with all three combinations again but with different requirements so that Col1 > Col3 > Col2; Col3 > Col1 > Col2\nDF2 <- cbind(combinations)\nDF2 <- t(DF2)\n\n## Eliminate rows with Column 4 - 6 all equal to 0 or 1 for DF 1, DF2, and DF3 one by one\n\n## Count columns by each subject; number = number of violations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Junk Code that I am not using or experimenting with still\n\ndataframe1 <- matrix(0,1140, 6) ## Empty table to fill with data from data.csv\ncol1 <- rep(c(1:20), each=60)\ncol2 <- rep(c(2:20,1), times=60)\ncol3 <- rep(c(3:20, 1, 2), times=60)\ndataframe1 <- cbind(col1, col2, col3)\nsubset(dataframe1, col1!=col2 & col2!=col3 & col1!=col3)\ndataframe1[col4] <- paste[dataframe1[col1], dataframe1[col2] dataframe1[col3] sep=\" \"]\n\nDF = data.frame(col1=rep(1:20, each=60), col2=rep(c(1:20), times=60), col3=rep(c(2:20,1), times=60))\nDF2 <- subset(DF, col1!=col2 & col2!=col3 & col1!=col3)\nDF2$col4 <- paste(DF2$col1, DF2$col2, DF2$col3, sep=\" \")\nDF2.sort=t(apply(DF2.1,sort))\nDF2[!duplicated(DF2.sort),]\n\nDF = data.frame(col1=rep(1:20, each=60), col2=rep(c(1:20), times=60), col3=rep(c(2:20,1),df times=60))\nDF.sort=t(apply(DF.1,sort))\nDF2 <- DF[!duplicated(DF.sort),]\n\nDF = data.frame(col1=rep(1:20, each=8000), col2=rep(rep(c(1:20), each=400),times=20), col3=rep(rep(c(1:20), each=20),times=400))\nDF.sort=t(apply(DF.1,sort))\nDF2 <- DF[!duplicated(DF.sort),]\n\ncol1 <- rep(c(1:20), each=60)\ncol2 <- rep(c(1:20), times=60)\ncol3 <- rep(c(2:20,1), times=60)\ndataframe1 <- cbind(col1, col2, col3)\nsubset(dataframe1, col1!=col2 & col2!=col3 & col1!=col3)\ndataframe1[col4] <- paste[dataframe1[col1], dataframe1[col2] dataframe1[col3] sep=\" \"]\n\nDF <- expand.grid(c(1:20), c(1:20), c(1:20))\nsubset(dataframe1, col1!=col2 & col2!=col3 & col1!=col3)\n\nDF <- expand.grid(col1=c(1:20), col2=c(1:20), col3=c(1:20))\nDF2 <- subset(DF, col1!=col2 & col2!=col3 & col1!=col3)\n\nN   <- 3\nvec <- c(1:20)\nlst <- lapply(numeric(N), function(x) vec)\nas.matrix(expand.grid(lst))\n\ncombinations <- combn(1:20, 3, FUN=NULL, simplify = TRUE)\nDF <- cbind(combinations)\nDF <- t(DF)",
    "created" : 1476245943791.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2008977379",
    "id" : "4AD3349F",
    "lastKnownWriteTime" : 1476684403,
    "last_content_update" : 1476684403370,
    "path" : "~/Downloads/RA/Assignment1.Rmd",
    "project_path" : "Assignment1.Rmd",
    "properties" : {
        "tempName" : "Untitled3"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}